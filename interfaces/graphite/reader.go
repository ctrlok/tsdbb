package graphite

import (
	"net/url"
	"time"

	"github.com/ctrlok/tsdbb/interfaces"
)

// Metric is a
type Metric struct {
	name string
}

// Internal is tuple mathod for Metric interface
func (m *Metric) Internal() interface{} {
	return ""
}

func (m *Metric) getName() string {
	return m.name
}

// PregeneratedMetrics is a struct which contain Metric, and generated by TSDB.GenerateMetrics
type PregeneratedMetrics struct {
	metrics []*Metric
	err     error
}

// Metric return metric or out of index error
func (p *PregeneratedMetrics) Metric(i int) (interfaces.Metric, error) {
	if i >= len(p.metrics) {
		return &Metric{}, p.err
	}
	return p.metrics[i], nil
}

// TSDB is a main generator of graphite Metric and Sender
type TSDB struct {
}

// GenerateMetrics is a method for create PregeneratedMetrics
func (t *TSDB) GenerateMetrics(i int) (p interfaces.PregeneratedMetrics) {
	return
}

// NewSender will create new sender
func (t *TSDB) NewSender(uri *url.URL) (interfaces.Sender, error) {
	var sender Sender
	return &sender, nil
}

// Sender is a sender instance.
type Sender struct {
	host string
}

// Send is a method for sending messages. Work only with internal Metric
func (s *Sender) Send(metric interfaces.Metric, t *time.Time) error {
	// m, ok := metric.(*Metric)
	// if !ok {
	// 	return
	// }
	return nil
}

// GetHost will return host of sender
func (s *Sender) GetHost() string {
	return s.host
}
